version: 2

# node image to run aws utilities
node_env: &node_env
  docker:
    - image: circleci/node:8.16.0-jessie

install_deploysuite: &install_deploysuite
  name: Installation of install_deploysuite.
  command: |
    git clone --branch v1.4.2 https://github.com/topcoder-platform/tc-deploy-scripts ../buildscript
    cp ./../buildscript/master_deploy.sh .
    cp ./../buildscript/buildenv.sh .
    cp ./../buildscript/awsconfiguration.sh .

install_build_dependencies: &install_build_dependencies
  name: Install g++-4.8 and Install node-5.12.0
  command: |
    sudo apt-get update -y
    sudo apt-get install g++-4.8  -y
    sudo apt-get install python-pip -y
    sudo pip install awscli --upgrade
    sudo apt install jq
    aws --version    
    
build_npm_steps: &build_npm_steps
  name: "configuring environment building environment"
  command: |
      ./awsconfiguration.sh $DEPLOY_ENV
      source awsenvconf
      ./buildenv.sh -e $DEPLOY_ENV -b ${LOGICAL_ENV}-${APPNAME}-buildvar            
      source buildenvvar
      npm run lint && npm run build
      npm test

build_deploy_steps: &build_deploy_steps
  - run: *install_build_dependencies
  - checkout
  - run: *install_deploysuite  
  - restore_cache:
      key: node-modules-{{ checksum "package-lock.json" }}
  - run: npm install
  - save_cache:
      key: node-modules-{{ checksum "package-lock.json" }}
      paths: 
        - node_modules    
  - run: *build_npm_steps
  - setup_remote_docker
  - deploy:
      name: Running MasterScript.
      command: |
        # ./deploy.sh $DEPLOY_ENV 
        # ./awsconfiguration.sh $DEPLOY_ENV
        source awsenvconf
        ./buildenv.sh -e $DEPLOY_ENV -b ${LOGICAL_ENV}-${APPNAME}-deployvar
        source buildenvvar
        ./master_deploy.sh -d CFRONT -e $DEPLOY_ENV -c true

jobs:

  build_deploy_dev:
    <<: *node_env
    environment:
      CXX: g++-4.8
      DEPLOY_ENV: "DEV"
      LOGICAL_ENV: "dev"
      APPNAME: "topcoder-app"       
    steps: *build_deploy_steps

  build_deploy_prod:
    <<: *node_env
    environment:
      CXX: g++-4.8
      DEPLOY_ENV: "PROD"
      LOGICAL_ENV: "prod"
      APPNAME: "topcoder-app"       
    steps: *build_deploy_steps

  build_deploy_qa:
    <<: *node_env
    environment:
      CXX: g++-4.8
      DEPLOY_ENV: "QA"
      LOGICAL_ENV: "qa"
      APPNAME: "topcoder-app"         
    steps: *build_deploy_steps


workflows:
  version: 2
  build-and-deploy:
    jobs:
      - build_deploy_dev:
          context : org-global 
          filters:
            branches:
              only: [ dev, dev-circleci2 ]
      - build_deploy_qa:
          context : org-global 
          filters:
            branches:
              only: qa-integration          
      - build_deploy_prod:
          context : org-global
          filters:
            branches:
              only: master           

